apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: OpenStackCluster
    name: ${CLUSTER_NAME}

---

apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: OpenStackCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  externalNetworkId: ${OPENSTACK_EXTERNAL_NETWORK_ID}
  cloudName: breqwatr
  cloudsSecret:
    name: ${CLUSTER_NAME}-cloud-config
    namespace: default
  dnsNameservers:
  - ${OPENSTACK_DNS_NAMESERVERS}
  managedAPIServerLoadBalancer: false
  managedSecurityGroups: true
  nodeCidr: 10.6.0.0/24
  useOctavia: false

---

apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: v1.19.11
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: OpenStackMachineTemplate
    name: ${CLUSTER_NAME}-control-plane
  kubeadmConfigSpec:
    useExperimentalRetryJoin: true
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        extraVolumes:
        - hostPath: /etc/kubernetes/cloud.conf
          mountPath: /etc/kubernetes/cloud.conf
          name: cloud
          readOnly: true
      controllerManager:
        extraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        extraVolumes:
        - hostPath: /etc/kubernetes/cloud.conf
          mountPath: /etc/kubernetes/cloud.conf
          name: cloud
          readOnly: true
        - hostPath: /etc/certs/cacert
          mountPath: /etc/certs/cacert
          name: cacerts
          readOnly: true
      imageRepository: k8s.gcr.io
    files:
    - content: ${OPENSTACK_CLOUD_PROVIDER_CONF_B64}
      encoding: base64
      owner: root
      path: /etc/kubernetes/cloud.conf
      permissions: "0600"
    - content: Cg==
      encoding: base64
      owner: root
      path: /etc/certs/cacert
      permissions: "0600"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        name: '{{ local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        name: '{{ local_hostname }}'

---

apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  template:
    spec:
      rootVolume:
        diskSize: 30
        sourceType: "image"
        sourceUUID: ${OPENSTACK_IMAGE_ID}
      cloudName: breqwatr
      cloudsSecret:
        name: ${CLUSTER_NAME}-cloud-config
        namespace: default
      flavor: ${OPENSTACK_NODE_MACHINE_FLAVOR}
      image: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}

---

apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      failureDomain: nova
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: OpenStackMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: v1.19.11

---

apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      rootVolume:
        diskSize: 30
        sourceType: "image"
        sourceUUID: ${OPENSTACK_IMAGE_ID}
      cloudName: breqwatr
      cloudsSecret:
        name: ${CLUSTER_NAME}-cloud-config
        namespace: default
      flavor: ${OPENSTACK_NODE_MACHINE_FLAVOR}
      image: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}

---

apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      useExperimentalRetryJoin: true
      files:
      - content: ${OPENSTACK_CLOUD_PROVIDER_CONF_B64}
        encoding: base64
        owner: root
        path: /etc/kubernetes/cloud.conf
        permissions: "0600"
      - content: Cg==
        encoding: base64
        owner: root
        path: /etc/certs/cacert
        permissions: "0600"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-config: /etc/kubernetes/cloud.conf
            cloud-provider: openstack
          name: '{{ local_hostname }}'

---

apiVersion: v1
data:
  cacert: Cg==
  clouds.yaml: ${OPENSTACK_CLOUD_YAML_B64}
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: ${CLUSTER_NAME}-cloud-config
  namespace: default
